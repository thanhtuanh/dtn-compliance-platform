# DTN Compliance Platform - Docker Compose Setup
# MINIMAL FIX für Password-Konsistenz

version: '3.8'

services:
  #################################
  # PostgreSQL Databases - PASSWORD FIX
  #################################
  
  postgres-gateway:
    image: postgres:15-alpine
    container_name: dtn-postgres-gateway
    environment:
      POSTGRES_DB: dtn_gateway
      POSTGRES_USER: dtn_user
      POSTGRES_PASSWORD: dtn_password  # <-- GEÄNDERT für Konsistenz
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_gateway_data:/var/lib/postgresql/data
      - ./scripts/init-gateway-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - dtn-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dtn_user -d dtn_gateway || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped

  postgres-compliance:
    image: postgres:15-alpine
    container_name: dtn-postgres-compliance
    environment:
      POSTGRES_DB: dtn_compliance
      POSTGRES_USER: dtn_user
      POSTGRES_PASSWORD: dtn_password  # <-- GEÄNDERT für Konsistenz
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_compliance_data:/var/lib/postgresql/data
      - ./scripts/init-compliance-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - dtn-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dtn_user -d dtn_compliance"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres-document:
    image: postgres:15-alpine
    container_name: dtn-postgres-document
    environment:
      POSTGRES_DB: dtn_document
      POSTGRES_USER: dtn_user
      POSTGRES_PASSWORD: dtn_password  # <-- GEÄNDERT für Konsistenz
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5434:5432"
    volumes:
      - postgres_document_data:/var/lib/postgresql/data
      - ./scripts/init-document-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - dtn-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dtn_user -d dtn_document"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  #################################
  # Ollama (Fixed für UNHEALTHY Status)
  #################################
  ollama:
    image: ollama/ollama:latest
    container_name: dtn-ollama
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=*
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - dtn-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s  # <-- Längere Startzeit für Ollama
    deploy:
      resources:
        limits:
          memory: 4G  # <-- Mehr Memory für Ollama
        reservations:
          memory: 2G

  #################################
  # pgAdmin (Password auch angepasst)
  #################################
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dtn-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dtn-compliance.de
      PGADMIN_DEFAULT_PASSWORD: dtn_admin_2024
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./scripts/pgadmin-servers.json:/pgadmin4/servers.json
    networks:
      - dtn-network
    depends_on:
      - postgres-gateway
      - postgres-compliance
      - postgres-document
    restart: unless-stopped

#################################
# Networks & Volumes (unverändert)
#################################
networks:
  dtn-network:
    driver: bridge
    name: dtn-compliance-network

volumes:
  postgres_gateway_data:
    driver: local
    name: dtn_postgres_gateway_data
  postgres_compliance_data:
    driver: local
    name: dtn_postgres_compliance_data
  postgres_document_data:
    driver: local
    name: dtn_postgres_document_data
  ollama_data:
    driver: local
    name: dtn_ollama_data
  pgadmin_data:
    driver: local
    name: dtn_pgadmin_data

# Gateway Service wird separat mit maven gestartet
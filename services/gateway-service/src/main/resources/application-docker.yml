# DTN Compliance Platform - Docker Environment Configuration
# Optimiert für Container-Deployment und Demo-Präsentationen

spring:
  config:
    activate:
      on-profile: docker

  # Application Info
  application:
    name: dtn-gateway-service

  # Database Configuration für Docker Container
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres-gateway}:${DB_PORT:5432}/${DB_NAME:dtn_gateway}
    username: ${DB_USER:dtn_user}
    password: ${DB_PASSWORD:dtn_secure_2024}
    driver-class-name: org.postgresql.Driver
    
    # Optimiert für Container-Environment
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      pool-name: DTN-Gateway-HikariCP

  # JPA Configuration für Docker
  jpa:
    hibernate:
      ddl-auto: update  # Für Demo: automatische Schema-Updates
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: Europe/Berlin
        enable_lazy_load_no_trans: true

  # Security Configuration
  security:
    jwt:
      secret: ${JWT_SECRET:DTN_Compliance_Platform_Secret_Key_2024_DSGVO_EU_AI_Act}
      expiration: ${JWT_EXPIRATION:86400000}
      issuer: DTN-Compliance-Platform

# Server Configuration für Container
server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
  tomcat:
    max-threads: 200
    min-spare-threads: 10

# DTN Business Configuration
dtn:
  compliance:
    gdpr:
      logging-enabled: ${GDPR_LOGGING_ENABLED:true}
      data-retention-days: ${DATA_RETENTION_DAYS:365}
      audit-log-level: ${AUDIT_LOG_LEVEL:INFO}
      german-dpa-reporting: true
      bfdi-compatible: true
    
    ai-act:
      enabled: true
      risk-classification: true
      prohibited-practices-check: true
      high-risk-documentation: true

# Service Discovery für Mikroservices
services:
  compliance:
    url: ${COMPLIANCE_SERVICE_URL:http://compliance-service:8081}
  document:
    url: ${DOCUMENT_SERVICE_URL:http://document-service:8082}

# Health Check & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
      group:
        demo:
          include: db,diskSpace
  health:
    db:
      enabled: true
    diskspace:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Swagger/OpenAPI für Demo-Präsentationen
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    tags-sorter: alpha
    operations-sorter: method
    disable-swagger-default-url: true
    display-request-duration: true
    doc-expansion: none
    show-extensions: true
    show-common-extensions: true
  api-docs:
    path: /v3/api-docs
    enabled: true
  show-actuator: true

# Logging Configuration (Docker-optimiert)
logging:
  level:
    com.dtn.gateway: ${LOG_LEVEL:INFO}
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    # JSON-Format für Container-Logging
    console: '{"timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%-5level","thread":"%thread","logger":"%logger{36}","message":"%msg"}%n'
  file:
    name: /app/logs/dtn-gateway.log
    max-size: 50MB
    max-history: 10

# CORS für Frontend-Integration
cors:
  allowed-origins:
    - http://localhost:3000
    - http://localhost:4200
    - https://dtn-frontend.onrender.com
    - http://gateway-service:8080
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
    - PATCH
  allowed-headers:
    - Authorization
    - Content-Type
    - X-Requested-With
    - Accept
    - Origin
  exposed-headers:
    - X-Total-Count
    - X-Page-Count
  allow-credentials: true
  max-age: 3600

# Demo Information für Bewerbungsgespräche
demo:
  info:
    title: "DTN Compliance Intelligence Platform"
    description: "DSGVO + EU AI Act konforme KI-Lösung für deutsche Unternehmen"
    version: "1.0.0"
    business-value: "96.960€ Jahresersparnis für 100-MA Software-Firma"
    target-audience: "Deutsche Software-Dienstleister (50-200 MA)"
    developer:
      name: "Duc Thanh Nguyen"
      location: "München/Bayern"
      email: "n.thanh@gmx.de"
    tech-stack:
      backend: "Java 21, Spring Boot 3.2, PostgreSQL"
      containers: "Docker, docker-compose"
      deployment: "Render.com (Live-Demo)"
      compliance: "DSGVO + EU AI Act + BfDI konform"
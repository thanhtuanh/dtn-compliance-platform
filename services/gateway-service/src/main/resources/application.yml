# services/gateway-service/src/main/resources/application.yml
# DTN Compliance Platform - Gateway Service Configuration (Package Fixed)

spring:
  application:
    name: dtn-gateway-service
  
  # Database Configuration
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/dtn_gateway}
    username: ${DB_USER:dtn_user}
    password: ${DB_PASSWORD:dtn_secure_2024}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          lob:
            non_contextual_creation: true
  
  # Server Configuration
  main:
    allow-circular-references: true
    
  # JSON Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: Europe/Berlin

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
  compression:
    enabled: true
  error:
    include-message: always
    include-binding-errors: always

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    try-it-out-enabled: true
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
    display-request-duration: true
    show-extensions: true
    show-common-extensions: true
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# DTN Compliance Configuration
dtn:
  compliance:
    # Business Configuration
    demo-mode: ${DEMO_MODE:true}
    business-value-annual-savings: ${BUSINESS_VALUE_ANNUAL_SAVINGS:96960}
    company-name: ${COMPANY_NAME:DTN Compliance Platform}
    
    # Security Configuration
    jwt:
      secret: ${JWT_SECRET:dtn_compliance_jwt_secret_2024_very_secure_key_for_production_use_256_bit}
      expiration: ${JWT_EXPIRATION:86400000}
      issuer: ${JWT_ISSUER:dtn-compliance-platform}
    
    # CORS Configuration  
    cors:
      allowed-origins: ${ALLOWED_ORIGINS:*}
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS,HEAD
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600
    
    # Microservice URLs
    services:
      compliance-url: ${COMPLIANCE_SERVICE_URL:http://localhost:8081}
      document-url: ${DOCUMENT_SERVICE_URL:http://localhost:8082}
    
    # DSGVO Configuration
    gdpr:
      logging-enabled: ${GDPR_LOGGING_ENABLED:true}
      audit-log-level: ${AUDIT_LOG_LEVEL:INFO}
      data-retention-days: ${DATA_RETENTION_DAYS:365}
      pseudonymization-enabled: ${PSEUDONYMIZATION_ENABLED:true}
    
    # EU AI Act Configuration
    ai-act:
      enabled: ${EU_AI_ACT_ENABLED:true}
      governance-enabled: ${AI_GOVERNANCE_ENABLED:true}

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
  health:
    diskspace:
      enabled: true
    db:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration - KORRIGIERT: com.dtn statt de.dtn
logging:
  level:
    com.dtn.gateway: ${LOG_LEVEL:INFO}  # <-- KORRIGIERT
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/dtn-gateway.log}
    max-size: 100MB
    max-history: 7

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  
  # Docker Database Configuration  
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres-gateway}:${DB_PORT:5432}/${DB_NAME:dtn_gateway}
    username: ${DB_USER:dtn_user}
    password: ${DB_PASSWORD:dtn_secure_2024}

# Docker-specific DTN Configuration
dtn:
  compliance:
    services:
      compliance-url: http://compliance-service:8081
      document-url: http://document-service:8082

logging:
  level:
    root: INFO
    com.dtn.gateway: INFO  # <-- KORRIGIERT

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  # Production optimizations
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false

# Production DTN Configuration
dtn:
  compliance:
    demo-mode: false
    
management:
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    root: WARN
    com.dtn.gateway: INFO  # <-- KORRIGIERT